# $Id$
# This file controls commands accessible via ftp connections
# All commands generally have the following properties, some
# commands may have additional configuration values also:
# plugin - The plugin that provides this command
# class - The java class containing this command
# method - The java method called when executing this command
# perms - The users allowed to use this command
# help - A simple description of the commands function
# help.specific - More detailed information about the commands usage

CDUP {
plugin org.drftpd.commands.dir
class Dir
method doCDUP
perms *
}

CWD {
plugin org.drftpd.commands.dir
class Dir
method doCWD
perms *
}

MKD {
plugin org.drftpd.commands.dir
class Dir
method doMKD
perms *
}

PWD {
plugin org.drftpd.commands.dir
class Dir
method doPWD
perms *
}

RMD {
plugin org.drftpd.commands.dir
class Dir
method doRMD
perms *
}

RNFR {
plugin org.drftpd.commands.dir
class Dir
method doRNFR
perms *
}

RNTO {
plugin org.drftpd.commands.dir
class Dir
method doRNTO
perms *
}

DELE {
plugin org.drftpd.commands.dir
class Dir
method doDELE
perms *
}

SITE WIPE {
plugin org.drftpd.commands.dir
class Dir
method doSITE_WIPE
perms =wipe =siteop
help Deletes files without removing credits.
help.specific ${command} [-r] <file/dir>
help.specific Deletes files without removing credits. -r means delete recursively.
}

SITE CHOWN {
plugin org.drftpd.commands.dir
class Dir
method doSITE_CHOWN
perms =siteop
help Changes ownership of a file/directory.
help.specific ${command} [-r] <user>[:<group>] <file>
help.specific Changes ownership of a file/directory.
}

#collides with SITE CHGRP defined by UserManagement
#SITE\ CHGRP=org.drftpd.commands.Dir

SITE LINK {
plugin org.drftpd.commands.dir
class Dir
method doSITE_LINK
perms =siteop
help Creates a symbolic link.
help.specific ${command} <target> <linkname>
help.specific Creates a symbolic link.
}

SITE FIXSIZE {
plugin org.drftpd.commands.dir
class Dir
method doSITE_FIXSIZE
perms =siteop
help Recursively walks through and validates the size information of the current working directory
help.specific ${command}
}

XCRC {
plugin org.drftpd.commands.dir
class Dir
method doXCRC
perms *
}

MDTM {
plugin org.drftpd.commands.dir
class Dir
method doMDTM
perms *
}

SIZE {
plugin org.drftpd.commands.dir
class Dir
method doSIZE
perms *
}

SITE FIXSLAVECOUNT {
plugin org.drftpd.commands.dir
class Dir
method doSITE_FIXSLAVECOUNT
perms =siteop
help Recursively walks through and validates the slave reference counts held against the current working directory
help.specific ${command}
help.specific This command should only be run when the site has a static VFS,
help.specific this means no file uploads, no slaves remerging and no active
help.specific archiving/jobs defined. If changes happen in the VFS whilst this
help.specific command is running the resulting counts set will be incorrect.
}

AUTH {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doAUTH
perms %
}

CPSV {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPASVandCPSV
perms *
}

PROT {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPROT
perms *
}

PBSZ {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPBSZ
perms %
}

MODE {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doMODE
perms *
}

PASV {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPASVandCPSV
perms *
}

PORT {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPORT
perms *
}

PRET {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doPRET
perms *
}

SSCN {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doSSCN
perms *
}

SYST {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doSYST
perms *
}

TYPE {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doTYPE
perms *
}

RETR {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doRETR
perms *
}

REST {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doREST
perms *
}

STOR {
plugin org.drftpd.commands.dataconnection
class DataConnectionHandler
method doSTOR
perms *
}

LIST {
plugin org.drftpd.commands.list
class ListHandler
method doLIST
perms *
# Set slavenames to true if you want to replace group with slaves file exist on
slavenames false
}

STAT {
plugin org.drftpd.commands.list
class ListHandler
method doSTAT
perms *
# Set slavenames to true if you want to replace group with slaves file exist on
slavenames false
}

MLST {
plugin org.drftpd.commands.list
class ListHandler
method doMLST
perms *
}

MLSD {
plugin org.drftpd.commands.list
class ListHandler
method doMLSD
perms *
}

NOOP {
plugin org.drftpd.commands.dummy
class Dummy
method doDUMMY
perms %
}

CLNT {
plugin org.drftpd.commands.dummy
class Dummy
method doDUMMY
perms %
}

SITE NUKE {
plugin org.drftpd.commands.nuke
class Nuke
method doSITE_NUKE
perms =nuke =siteop
search false
help Nuke a directory.
help.specific ${command} <directory> <multiplier> <message>
}

SITE UNNUKE {
plugin org.drftpd.commands.nuke
class Nuke
method doSITE_UNNUKE
perms =nuke =siteop
search false
help Unnuke a directory.
help.specific ${command} <directory>
}

SITE NUKES {
plugin org.drftpd.commands.nuke
class Nuke
method doSITE_NUKES
perms *
help List all nuked directories.
help.specific ${command} [section]
}

SITE NUKESCLEAN {
plugin org.drftpd.commands.nuke
class Nuke
method doSITE_NUKESCLEAN
perms =nuke =siteop
help Clear nukelog of all invalid nukes.
help.specific ${command}
}

SITE ADDJOB {
plugin org.drftpd.plugins.jobmanager
class JobManagerCommandHandler
method doADDJOB
perms =siteop
help Add a job to the JobManager queue.
help.specific SITE ADDJOB <file> <priority> <timestomirror> <destslave> [destslave ...]
help.specific <file> : The file to archive
help.specific <priority> : The priority you want this job to have. Must be an Integer.
help.specific <timestomirror> : The max number of slaves each file should be on.
help.specific <destslave> : The name of the slave to transfer the files to.
}

SITE LISTJOBS {
plugin org.drftpd.plugins.jobmanager
class JobManagerCommandHandler
method doLISTJOBS
perms =siteop
help List the current jobs queued by the JobManager.
help.specific List the current jobs queued by the JobManager by index #
}

SITE LISTRUNNINGJOBS {
plugin org.drftpd.plugins.jobmanager
class JobManagerCommandHandler
method doLISTRUNNINGJOBS
perms =siteop
help List the current jobs queued by the JobManager.
help.specific List the current jobs queued by the JobManager by index #
}

SITE REMOVEJOB {
plugin org.drftpd.plugins.jobmanager
class JobManagerCommandHandler
method doREMOVEJOB
perms =siteop
help Removes a Job from the JobManager queue by index # or range.
help.specific SITE REMOVEJOB <jobindex> <lowrange>-<highrange> will remove the job with
help.specific jobindex and all jobs including and between lowrange and highrange.
help.specific You can use as many ranges as your heart desires.
}

SITE REMOVEJOBS {
plugin org.drftpd.plugins.jobmanager
class JobManagerCommandHandler
method doREMOVEJOBS
perms =siteop
help Removes all jobs that are not currently transferring.
help.specific Removes all jobs that are not currently transferring.  
}

SITE STARTJOBS {
plugin org.drftpd.plugins.jobmanager
class JobManagerCommandHandler
method doSTARTJOBS
perms =siteop
help Starts running the jobs in the JobManager queue.
help.specific Starts running the jobs in the JobManager queue.
}

SITE STOPJOBS {
plugin org.drftpd.plugins.jobmanager
class JobManagerCommandHandler
method doSTOPJOBS
perms =siteop
help Stops running the jobs in the JobManager queue.
help.specific Stops running the jobs in the JobManager queue.
}

SITE ADDIP {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_ADDIP
perms =gadmin =siteop
help Add a new mask to a user
help.specific ${command} <username> <ident@ip>
}

SITE ADDUSER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_ADDUSER
perms =gadmin =siteop
help Add a new user
help.specific ${command} <user> <password> [<ident@ip#1> ...]
}

SITE ADDGROUP {
plugin org.drftpd.commands.usermanagement
class GroupManagementHandler
method doSITE_ADDGROUP
perms =siteop
help Add a new group
help.specific ${command} <group>
}

# Backwards compatibility
SITE CHANGE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_CHANGEUSER
perms =gadmin =siteop
help Change parameters for a user
help.specific ${command} <username> <field> <value>
help.specific Valid fields: group, created, ratio, idle_time, credits, tagline
help.specific num_logins # [opt perIP], comment, wkly_allotment, max_sim #dn #up
}

SITE CHANGEUSER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_CHANGEUSER
perms =gadmin =siteop
help Change parameters for a user
help.specific ${command} <username> <field> <value>
help.specific Valid fields: group, created, ratio, idle_time, credits, tagline
help.specific num_logins # [opt perIP], comment, wkly_allotment, max_sim #dn #up
}

SITE CHANGEGROUP {
plugin org.drftpd.commands.usermanagement
class GroupManagementHandler
method doSITE_CHANGEGROUP
perms =siteop
help Change parameters for a group
help.specific ${command} <groupname> <field> <value>
help.specific Valid fields: created, slots, leechslots
}

SITE CHANGEGROUPADMIN {
plugin org.drftpd.commands.usermanagement
class GroupManagementHandler
method doSITE_CHANGEGROUPADMIN
perms =siteop
help Add/Remove users as group admin from a group
help.specific ${command} <group> <user> [<user> ...]
}

SITE CHGRP {
plugin org.drftpd.commands.usermanagement
class GroupManagementHandler
method doSITE_CHGRP
perms =siteop
help Change secondary groups for a user
help.specific ${command} <user> <group> [<group> ...]
}

SITE CHPASS {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_CHPASS
perms =gadmin =siteop
help Change password for a user
help.specific ${command} <user> <password>
}

SITE DEBUG {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_DEBUG
perms *
help Allows you to see stacktraces on command errors
}

SITE DELIP {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_DELIP
perms =gadmin =siteop
help Remove a mask from a user
help.specific ${command} <user> <ident@ip> ...
}

SITE DELUSER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_DELUSER
perms =gadmin =siteop
help Delete a user
help.specific ${command} <user> [reason]
}

SITE DELGROUP {
plugin org.drftpd.commands.usermanagement
class GroupManagementHandler
method doSITE_DELGROUP
perms =gadmin =siteop
help Delete a group
help.specific ${command} <group>
}

SITE GADDUSER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_GADDUSER
perms =siteop
help Add a new user to the specified group
help.specific ${command} <group> <user> <password> [<ident@ip#1 ..]
}

SITE GINFO {
plugin org.drftpd.commands.usermanagement
class GroupManagementHandler
method doSITE_GINFO
perms =gadmin =siteop
help Show information on a group
help.specific ${command} <group>
}

SITE GIVE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_GIVE
perms =siteop
help Give a user credits
help.specific ${command} <user> <bytes>
}

SITE GROUPS {
plugin org.drftpd.commands.usermanagement
class GroupManagementHandler
method doSITE_GROUPS
perms =siteop
help Lists the groups on the site
}

SITE GRPREN {
plugin org.drftpd.commands.usermanagement
class GroupManagementHandler
method doSITE_GRPREN
perms =siteop
help Rename a group
help.specific ${command} <oldgroup> <newgroup>
}

SITE KICK {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_KICK
perms =siteop
help Kick a users current connections to the site
help.specific ${command} <user> [message]
}

SITE KICKALL {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_KICKALL
perms =siteop
help Kick all users current connections to the site
help.specific ${command} [message]
}

SITE KILL {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_KILL
perms =siteop
help Kill's a specific connection from the FTP by thread ID
help.specific ${command} <threadID> [message]
}

SITE PASSWD {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_PASSWD
perms *
help Change your password
help.specific ${command} <password>
}

SITE PURGE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_PURGE
perms =gadmin =siteop
help Permanently remove a user from the site
help.specific ${command} <username>
}

SITE DELPURGE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_DELPURGE
perms =gadmin =siteop
help Permanently remove a user from the site
help.specific ${command} <username>
}

SITE READD {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_READD
perms =gadmin =siteop
help Readd a deleted user
help.specific ${command} <user>
}

SITE RENUSER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_RENUSER
perms =siteop
help Rename a user
help.specific ${command} <old_username> <new_username>
}

SITE SEEN {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_SEEN
perms *
help Show when a user last connected
help.specific ${command} <user>
}

SITE TAGLINE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_TAGLINE
perms *
help Change your tagline
help.specific ${command} <tagline>
}

SITE SWAP {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_SWAP
perms =siteop
help Swap Credits Between Users
help.specific ${command} <srcuser> <destuser> <bytes>
}

SITE TAKE {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_TAKE
perms =siteop
help Remove credits from a user
help.specific ${command} <user> <bytes>
}

SITE USER {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_USER
perms *
help Show details for a user
help.specific ${command} <user>
}

SITE USERS {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_USERS
perms =siteop
help List all usernames added to the site
}

SITE WHO {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_WHO
perms =siteop
help Show who's online
}

SITE SWHO {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_SWHO
perms =siteop
help Show who's online
}

SITE BAN {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_BAN
perms =ban =siteop
help Ban a user from logging onto the site for a specified amount of time.
help.specific ${command} <user> <minutes> [reason]
}

SITE BANALL {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_BANALL
perms =ban =siteop
help Ban all users from logging onto the site for a specified amount of time.
help.specific ${command} <minutes> [reason]
}

SITE UNBAN {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_UNBAN
perms =ban =siteop
help Removes a ban for the specified user.
help.specific ${command} <user>
}

SITE UNBANALL {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_UNBANALL
perms =ban =siteop
help Removes ban from all users.
help.specific ${command}
}

SITE BANS {
plugin org.drftpd.commands.usermanagement
class UserManagementHandler
method doSITE_BANS
perms =ban =siteop
help List the current users banned on the site.
}

# $Id$
SITE REBUILDINDEX {
plugin org.drftpd.commands.indexmanager
class IndexManager
method doRebuildIndex
perms =siteop
}

SITE INDEXSTATUS {
plugin org.drftpd.commands.indexmanager
class IndexManager
method doIndexStatus
perms =siteop
}

SITE REFRESHINDEX {
plugin org.drftpd.commands.indexmanager
class IndexManager
method doRefreshIndex
perms =siteop
help requests a recursive refresh of data held for the current directory in the index.
help.specific ${command} [-q]
help.specific     The -q option suppresses details of the progress of the refresh.
}

SITE RESCAN {
plugin org.drftpd.commands.zipscript
class ZipscriptCommands
method doSITE_RESCAN
perms *
help sfv scans the files in the current directory or a specific directory requested.
help.specific ${command} [-r] [force] [delete] [delete0byte] [quiet] [path]
help.specific     The -r option recursively scans all directories below the current directory as well.
help.specific     The noforce option makes the slave recalculate the checksums.
help.specific     The nodelete option removes bad files rather than just reporting them.
help.specific     The nodelete0byte option removes any files listed in the SFV which exist but are 0 byte.
help.specific     The quiet option only prints output for files which aren't good.
help.specific     Specifying a path will rescan the requested directory instead of the current directory.
}

IDNT {
plugin org.drftpd.commands.login
class LoginHandler
method doIDNT
perms *
}

USER {
plugin org.drftpd.commands.login
class LoginHandler
method doUSER
perms %
}

PASS {
plugin org.drftpd.commands.login
class LoginHandler
method doPASS
perms %
}

QUIT {
plugin org.drftpd.commands.login
class LoginHandler
method doQUIT
perms *
}

ABOR {
plugin org.drftpd.commands.misc
class Misc
method doABOR
perms *
}

FEAT {
plugin org.drftpd.commands.misc
class Misc
method doFEAT
perms *
}

SITE STAT {
plugin org.drftpd.commands.misc
class Misc
method doSITE_STAT
perms *
help Show simple user stats
help.specific ${command}
help.specific Show simple user stats
}

SITE TIME {
plugin org.drftpd.commands.misc
class Misc
method doSITE_TIME
perms *
help Show current server time
help.specific ${command}
help.specific Show current server time
}

SITE VERS {
plugin org.drftpd.commands.misc
class Misc
method doSITE_VERS
perms *
help Show drftpd version
help.specific ${command}
help.specific Show drftpd version
}

SITE HELP {
plugin org.drftpd.commands.misc
class Misc
method doSITE_HELP
perms *
help duh! it does this dummy!
help.specific ${command} <site cmd> will display specific information on that command
nohelp ABOR,AUTH,CDUP,CLNT,CPSV,CWD,DELE,FEAT,IDNT,LIST,MDTM,MKD,MLSD,MLST,MODE,NOOP,PASS,PASV,PBSZ,PORT,PRET,PROT,PWD,QUIT,REST,RETR,RMD,RNFR,RNTO,SIZE,SSCN,STOR,SYST,TYPE,USER,XCRC
}

SITE NEW {
plugin org.drftpd.commands.newhandler
class New
method doNEW
perms *
help Will list newly uploaded directories.
help.specific ${command} - List the newest dirs in all sections.
help.specific ${command} <number> - List the <number> newest dirs in all sections.
help.specific ${command} <section> - List the newest dirs in <section>.
help.specific ${command} <section> <number> - List the <number> newest dirs in <section>.
# specify the default number of dirs to show
default 5
# specify the maximum number of dirs to show (overrides user input)
max 25
# specify the sections to exclude from output (space separated)
filtered_sections REQUESTS
}

SITE REQUEST {
plugin org.drftpd.commands.request
class Request
method doSITE_REQUEST
perms =request
help Add a request
help.specific ${command} <nameofrequest>
}

SITE REQFILLED {
plugin org.drftpd.commands.request
class Request
method doSITE_REQFILLED
perms *
help Fill a request
help.specific ${command} <nameofrequest>
}

SITE REQUESTS {
plugin org.drftpd.commands.request
class Request
method doSITE_REQUESTS
perms *
help List unfilled requests
help.specific ${command}
}

SITE REQDEL {
plugin org.drftpd.commands.request
class Request
method doSITE_REQDELETE
perms =request
help Deletes a request
help.specific ${command} <nameofrequest>

# you can only delete your own without deleteOthers
request.deleteOthers =siteop
}

SITE SECTIONS {
plugin org.drftpd.commands.sections
class Sections
method doSITE_SECTIONS
perms *
help List the currently defined sections on the site.
help.specific ${command}
help.specific List the currently defined sections on the site.
}

SITE RELOAD {
plugin org.drftpd.commands.sitemanagement
class SiteManagementHandler
method doSITE_RELOAD
perms =siteop
help Reload the config files
help.specific ${command}
help.specific Reload the config files
}

SITE SHUTDOWN {
plugin org.drftpd.commands.sitemanagement
class SiteManagementHandler
method doSITE_SHUTDOWN
perms =siteop
help Shutdown the ftp server
help.specific ${command}
help.specific Shutdown the ftp server
}

SITE LIST {
plugin org.drftpd.commands.sitemanagement
class SiteManagementHandler
method doSITE_LIST
perms *
help This will raw list files in the current directory
help.specific ${command}
help.specific This will raw list files in the current directory
}

SITE SLAVES {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_SLAVES
perms =siteop
help List the slave added to the site and the status of each.
help.specific ${command}
help.specific List the slave added to the site and the status of each.
}

SITE REMERGE {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_REMERGE
perms =siteop
help Rebuilds the file database of the specified slave.
help.specific ${command} <SLAVENAME>
help.specific Rebuilds the file database of the specified slave.
}

SITE KICKSLAVE {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_KICKSLAVE
perms =siteop
help Kick a slave offline.
help.specific ${command} <SLAVENAME>
help.specific Kicks the specified slave offline.
}

SITE SLAVE {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_SLAVE
perms =siteop
help Show or modify information about a specific slave.
help.specific ${command} <SLAVENAME>
help.specific Show the stored information set on the specified slave.
help.specific ${command} <SLAVENAME> SET <key> <value>
help.specific Add any information you want to the slave.
help.specific ${command} <SLAVENAME> UNSET <key>
help.specific Remove any information you want from the slave.
help.specific ${command} <SLAVENAME> ADDMASK <ident@host>
help.specific Add a host mask that the specified slave is allowed to connect from.
help.specific ${command} <SLAVENAME> DELMASK <ident@host>
help.specific Remove a host mask that the specified slave is allowed to connect from.
help.specific ${command} <SLAVENAME> SHUTDOWN
help.specific Notify the specified slave to initiate a shutdown (and potentially restart).
help.specific ${command} <SLAVENAME> QUEUES
help.specific Show status of rename & remerge queues
}

SITE ADDSLAVE {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_ADDSLAVE
perms =siteop
help Add a slave to the site.
help.specific ${command} <SLAVENAME>
help.specific Add the specified slave to the site.
help.specific Note: Be sure to use SITE SLAVE <SLAVENAME> ADDMASK <ident@host>
help.specific to allow the slave to connect
}

SITE DELSLAVE {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_DELSLAVE
perms =siteop
help Remove a slave from the site.
help.specific ${command} <SLAVENAME>
help.specific Remove the specified slave from the site.
}

SITE SLAVESELECT {
plugin org.drftpd.commands.slavemanagement
class SlaveManagement
method doSITE_SLAVESELECT
perms =siteop
help Gives the value of each slave for your current SlaveSelection config
help.specific ${command} <TYPE> </FULLPATH>
help.specific <TYPE> is one of up,down,jobdown,jobup
help.specific </FULLPATH> needs to start with "/" should not exist
}

SITE RULES {
plugin org.drftpd.commands.textoutput
class Textoutput
method doTEXT_OUTPUT
perms *
help Displays the site rules
file userdata/text/rules.txt
}

SITE WELCOME {
plugin org.drftpd.commands.textoutput
class Textoutput
method doTEXT_OUTPUT
perms *
help Displays site welcome message
file userdata/text/welcome.txt
}

SITE ALUP {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_ALUP
perms *
help Lists the top uploaders of all time
}

SITE ALDN {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_ALDN
perms *
help Lists the top downloaders of all time
}

SITE MONTHUP {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_MONTHUP
perms *
help Lists the top uploaders for the month
}

SITE MONTHDN {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_MONTHDN
perms *
help Lists the top downloaders for the month
}

SITE WKUP {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_WKUP
perms *
help Lists the top uploaders for the week
}

SITE WKDN {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_WKDN
perms *
help Lists the top downloaders for the week
}

SITE DAYUP {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_DAYUP
perms *
help Lists the top uploaders for the day
}

SITE DAYDN {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_DAYDN
perms *
help Lists the top downloaders for the day
}

SITE STATS {
plugin org.drftpd.commands.transferstatistics
class TransferStatistics
method doSITE_STATS
perms *
help Show user stats
}

SITE GALUP {
plugin org.drftpd.commands.transferstatistics
class MoreStats
method doSITE_GALUP
perms *
help Lists the top uploading of all time
}

SITE GALDN {
plugin org.drftpd.commands.transferstatistics
class MoreStats
method doSITE_GALDN
perms *
help Lists the top downloading groups of all time
}

SITE GMONTHUP {
plugin org.drftpd.commands.transferstatistics
class MoreStats
method doSITE_GMONTHUP
perms *
help Lists the top uploading groups of all time
}

SITE GMONTHDN {
plugin org.drftpd.commands.transferstatistics
class MoreStats
method doSITE_GMONTHDN
perms *
help Lists the top downloading group for the month
}

SITE GWKUP {
plugin org.drftpd.commands.transferstatistics
class MoreStats
method doSITE_GWKUP
perms *
help Lists the top uploading for the week
}

SITE GWKDN {
plugin org.drftpd.commands.transferstatistics
class MoreStats
method doSITE_GWKDN
perms *
help Lists the top downloading group for the week
}

SITE GDAYUP {
plugin org.drftpd.commands.transferstatistics
class MoreStats
method doSITE_GDAYUP
perms *
help Lists the top uploading for the day
}

SITE GDAYDN {
plugin org.drftpd.commands.transferstatistics
class MoreStats
method doSITE_GDAYDN
perms *
help Lists the top downloading group for the day
}

SITE TRAFFIC {
plugin org.drftpd.commands.transferstatistics
class MoreStats
method doSITE_TRAFFIC
perms *
help Summary of the daemon upload/download stats.
}

SITE PRE {
plugin org.drftpd.commands.pre
class Pre
method doSITE_PRE
perms *
help Moves dir to specified section
help.specific ${command} <dir> <section>
}

SITE SETEXPIRE {
plugin org.drftpd.commands.usermanagement.expireduser
class ExpiredUser
method doSITE_SETEXPIRE
perms =siteop
help Sets expiry date for User <yyyy-MM-dd>
help.specific ${command} <username> <expiry-date>
}

SITE REMOVEEXPIRE {
plugin org.drftpd.commands.usermanagement.expireduser
class ExpiredUser
method doSITE_REMOVEEXPIRE
perms =siteop
help Removes expiry date for User
help.specific ${command} <username>
}

SITE ADDNOTE {
plugin org.drftpd.commands.usermanagement.notes
class Notes
method doSITE_ADDNOTE
perms =siteop
help Add's Note For User
help.specific ${command} <username> <note>
}

SITE DELNOTE {
plugin org.drftpd.commands.usermanagement.notes
class Notes
method doSITE_DELNOTE
perms =siteop
help Removes Note For User
help.specific ${command} <username> <noteID>
}

SITE XDUPE {
plugin org.drftpd.commands.xdupe
class XDupe
method doSITE_XDUPE
perms *
help The X-DUPE mechanism helps you saving time when uploading files by avoiding "dupes".
help.specific ${command} <mode>
help.specific Mode 1: Up to a maximum of 80 chars total line length. Filenames longer than 66 chars will be truncated.
help.specific Mode 2: The server sends only one filename per X-DUPE line, and the maximum line length is 80 chars. Filenames are also truncated.
help.specific Mode 3: Only one filename is sent per X-DUPE line, and the filename will not be truncated.
help.specific Mode 4: All files are listed on one long line, up to a maximum of 1024 characters. Files which are too long to fit will be skipped.
}

SITE INVITE {
plugin org.drftpd.plugins.sitebot
class commands.UserHandler
method doSITE_INVITE
perms *
help Invite yourself to irc channels using the sitebot
help.specific ${command} <ircnick>
help.specific ${command} <botname> <ircnick>
help.specific <botname> is required to use a secondary sitebot
}

SITE BLOWFISH {
plugin org.drftpd.plugins.sitebot
class commands.SiteBotManagement
method doSITE_BLOWFISH
perms *
help List blowfish keys for irc channels
help.specific ${command}
help.specific ${command} <botname>
help.specific <botname> is required to use a secondary sitebot
}

SITE GETKEY {
plugin org.drftpd.plugins.sitebot
class commands.SiteBotManagement
method doSITE_BLOWFISH
perms *
help List blowfish keys for irc channels
help.specific ${command}
help.specific ${command} <botname>
help.specific <botname> is required to use a secondary sitebot
}

SITE SETBLOWFISH {
plugin org.drftpd.plugins.sitebot
class commands.SiteBotManagement
method doSITE_SETBLOWFISH
perms *
help Set your personal blowfish key on the sitebot
help.specific ${command} <blowkey>
help.specific ${command} <botname> <blowkey>
help.specific <botname> is required to use a secondary sitebot
}

SITE SETKEY {
plugin org.drftpd.plugins.sitebot
class commands.SiteBotManagement
method doSITE_SETBLOWFISH
perms *
help Set your personal blowfish key on the sitebot
help.specific ${command} <blowkey>
help.specific ${command} <botname> <blowkey>
help.specific <botname> is required to use a secondary sitebot
}

SITE IRC {
plugin org.drftpd.plugins.sitebot
class commands.SiteBotManagement
method doSITE_IRC
perms =siteop
help Control the IRC sitebot
help.specific ${command} connect
help.specific ${command} <botname> connect
help.specific ${command} disconnect
help.specific ${command} <botname> disconnect
help.specific ${command} reconnect
help.specific ${command} <botname> reconnect
help.specific ${command} raw <commmand>
help.specific ${command} <botname> raw <command>
help.specific ${command} say <message>
help.specific ${command} <botname> say <message>
help.specific <botname> is manadatory if more than one sitebot running
}

SITE UNDUPE {
plugin org.drftpd.plugins.dupecheck
class DupeCheckCommands
method doSITE_UNDUPE
perms =siteop
help UnDupe a File/Directory
help.specific ${command} <directory/file>
}

SITE FIXLINKS {
plugin org.drftpd.plugins.linkmanager
class LinkManagerCommands
method doSITE_FIXLINKS
perms =siteop
help Fixes All Links from LinkManager
help.specific ${command}
}

SITE APPROVE {
plugin org.drftpd.commands.approve
class ApproveCommands
method doSITE_APPROVE
perms =siteop
help Approve release even though rules say it should get nuked
help.specific ${command} [path]
}

SITE REMAPPROVE {
plugin org.drftpd.commands.approve
class ApproveCommands
method doSITE_REMAPPROVE
perms =siteop
help Removes Approval of Release
help.specific ${command} [path]
}

SITE TOP {
plugin org.drftpd.plugins.trialmanager
class TrialManagerCommands
method doTOP
perms *
help Lists All Users In Trial Period
help.specific ${command}
}

SITE CUT {
plugin org.drftpd.plugins.trialmanager
class TrialManagerCommands
method doCUT
perms *
help Lists All Cut Users In Trial Period
help.specific ${command}
}

SITE PASSED {
plugin org.drftpd.plugins.trialmanager
class TrialManagerCommands
method doPASSED
perms *
help Lists If User Has Passed Trial
help.specific ${command}
}

SITE GPASSED {
plugin org.drftpd.plugins.trialmanager
class TrialManagerCommands
method doPASSED
perms *
help Lists If User Has Passed Trial
help.specific ${command} <Group>
input all
output source
}

SITE MASTERUPTIME {
plugin org.drftpd.commands.serverstatus
class ServerStatus
method doMasterUptime
perms =siteop
help Will show current master uptime
}

SITE SLAVEUPTIME {
plugin org.drftpd.commands.serverstatus
class ServerStatus
method doSlaveUptime
perms =siteop
help Will show current slave uptime
help.specific ${command} <slave>
}

SITE SLAVESUPTIME {
plugin org.drftpd.commands.serverstatus
class ServerStatus
method doSlavesUptime
perms =siteop
help Will show current slaves uptime
}

SITE STATUS {
plugin org.drftpd.commands.serverstatus
class ServerStatus
method doStatus
perms =siteop
help Will show current information about the server.
help.specific ${command} Usage:
help.specific ${command} <os, vm, memory, threads, gc, all>
help.specific ${command} OS - Will show Operational System Info
help.specific ${command} VM - Will show VM Info.
help.specific ${command} MEMORY - Will show Memory Info.
help.specific ${command} THREADS - Will show Threads Info.
help.specific ${command} GC - Will show Garbage Collector Info.
help.specific ${command} CLASSES - Will show Classes Info.
help.specific ${command} ALL - shortcut to display ALL Info.
}

