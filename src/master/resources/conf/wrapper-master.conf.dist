# $Id$
#********************************************************************
# Wrapper Properties
#********************************************************************
# Java Application
wrapper.java.command=java

# Working Dir
wrapper.working.dir=../

# Java Main class. This class must implement the WrapperListener interface
# or guarantee that the WrapperManager class is initialized. Helper
# classes are provided to do this for you. See the Integration section
# of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar) Add class path elements as
# needed starting from 1
wrapper.java.classpath.1=lib/wrapper.jar
wrapper.java.classpath.2=lib/jpf-1.5.1.jar
wrapper.java.classpath.3=lib/jpf-boot-1.5.1.jar
wrapper.java.classpath.4=lib/commons-logging-1.2.jar
wrapper.java.classpath.5=lib/log4j-1.2.17.jar
wrapper.java.classpath.6=lib/drftpd-jpf-3.2.0.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=lib

# Java Additional Parameters
wrapper.java.additional.1=-Dlog4j.configuration=file:conf/log4j-master.properties
wrapper.java.additional.2=-Djpf.boot.config=conf/boot-master.properties
wrapper.java.additional.3=-XX:+UnlockDiagnosticVMOptions
wrapper.java.additional.4=-XX:+UnsyncloadClass
wrapper.java.additional.5=-XX:+UseAES
wrapper.java.additional.6=-XX:+UseAESIntrinsics

#--- Uncommenting the following (And changing X to next number), 
#--- causes DR to create a memory dump if out of memory
#wrapper.java.additional.X=-XX:+HeapDumpOnOutOfMemoryError
#--- Uncommenting the following (And changing X to next number), 
#--- Causes Garbage collectible items to remain in memory and not collected if available memory is sufficient
#wrapper.java.additional.X=-XX:SoftRefLRUPolicyMSPerMB=10000
#--- Uncommenting the following (And changing X to next number), 
#--- Unlocks and uses part of the new G1GC
#wrapper.java.additional.X=-XX:+UnlockExperimentalVMOptions
#--- Uncommenting the following (And changing X to next number), 
#--- Use the new garbage collection routine 6.14 or higher needed
#wrapper.java.additional.X=-XX:+UseG1GC
#--- Uncommenting the following (And changing X to next number), 
#--- Sets users timezone
#wrapper.java.additional.X=-Duser.timezone="Europe/Amsterdam"
#--- Uncommenting the following (And changing X to next number), 
#--- Uses optimized versions of Get<Primitive>Field.
#wrapper.java.additional.X=-XX:+UseFastAccessorMethods
#--- Uncommenting the following (And changing X to next number), time will increase initial startup 
#--- time but should improve performance once running. This option requires you to have a 
#--- full JDK installed, not simply a JRE.
#wrapper.java.additional.X=-server
#--- Uncommenting the following (And changing X to next number), will change ouput side from ASCII(false) to Binary(true)
#--- This will change file size to base 2
#wrapper.java.additional.X=-Dbytes.binary=true

# ---------------------------------------
# Enable below if you wish to monitor the memory that drftpd uses, the 
# resulting hprof.txt file should be sent to zubov (i'm everywhere)
# It will cause a severe performance hit to drftpd, but will give
# valuable information that can decrease memory usage
# If you have a jvm greater or equal to 1.5.0.03 HAT (the tool I was
# going to use) will work with it.  If your JVM is old, upgrade or
# don't bother
#wrapper.java.additional.5=-Xrunhprof:heap=dump,file=hprof.txt,format=b
# ---------------------------------------

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=16
#wrapper.java.initmemory.percent=50

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=512
#wrapper.java.maxmemory.percent=75

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=org.java.plugin.boot.Boot

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=logs/wrapper-master.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper NT Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=drftpd-master

# Display name of the service
wrapper.ntservice.displayname=DrFTPD Master

# Description of the service
wrapper.ntservice.description=DistRibuted FTP Daemon Master http://www.drftpd.org

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  
# [ AUTO_START | DEMAND_START ]
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
# [ true | false ]
wrapper.ntservice.interactive=false
