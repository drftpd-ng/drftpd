# $Id: slave.conf.dist 2041 2010-04-11 18:36:43Z djb61 $
######################
### Slave settings ###
######################

# What you set the name as with "site addslave <slavename>" on the master.
slave.name=drftpd

# Root to serve contents from, is automatically created.
slave.root.1=site
# You can use several roots for striping files across
# several harddrives without using RAID or similar.
#slave.root.2=d:/

# Master host/ip
master.host=localhost
# Port to connect to the master
master.bindport=1099
# Set the master to use SSL for slave connections as well
slave.masterSSL=true

# Pasv port range
#slave.portfrom=30000
#slave.portto=33000

# BIND IP - This will bind SLAVE ip to this address.
#bind.ip=xxx.xxx.xxx.xxx


# Enable checksums for uploads
# [ true | false ]
enableuploadchecksums=true

# Enable checksums for downloads
# [ true | false ]
enabledownloadchecksums=true

# BufferSize set at 0 lets the kernel handle the buffer sizes
bufferSize=0

# This is the maximum the slave will wait for the master.
# Timeout on the slave (on the master side) should be equal.
# "site slave <slavename> set timeout <value>
# 60000 = one minute
slave.timeout=60000

# DiskSelection plugin.
# If doesn't know what that means, do NOT change this.
diskselection=org.drftpd.slave.diskselection.filter

# Enabled cipher suites
# If left empty, default set will be used.
# Use whitelist to add specific chiphers to use.
# All supported ciphers not included in whitelist will be removed.
# Use blacklist to exclude ciphers.
# Blacklist can be combined with whitelist, if no whitelist rule(s) are
# specified blacklist will exclude from default set.
# Blacklist has precedence over whitelist.
# Both blacklist and whitelist use regular expression pattern.
# Multiple whitelist/blacklist rules are supported.
#cipher.whitelist.1=
cipher.blacklist.1=.*_(NULL|EXPORT|DES|RC4|3DES|MD5|PSK|anon|SCSV)_.*

# Enabled protocols
# If left empty, default set will be used
protocol.1=TLSv1
protocol.2=TLSv1.1
protocol.3=TLSv1.2

# Setting this to true will make this slave perform
# a full remerge when connecting to a master irrespective
# of any partial remerge settings on the master
ignore.partialremerge=false

# Settings this to true will make remerge go faster
# by threading the remerge process.
threadedremerge=true

# Setting this to true will list the slave roots concurrently
# during remerge. This should only be set if the slave has more than
# one root and more than one CPU otherwise it will likely be slower
# than leaving it disabled. The speed increase from enabling this will
# likely increase with more roots and CPUs.
concurrent.root.iteration=false